// ---- DON'T EDIT! THIS IS AUTO GENERATED CODE ---- //
use crate::lexers::Token;

pub fn get_keyword_token(identifier: &Vec<char>) -> Result<Token, String> {
    let id: String = identifier.into_iter().collect();
    match &id[..] {
        "builtin" => Ok(Token::CONSTANT(identifier.clone())),
        "command" => Ok(Token::CONSTANT(identifier.clone())),
        "compgen" => Ok(Token::CONSTANT(identifier.clone())),
        "echo" => Ok(Token::CONSTANT(identifier.clone())),
        "eval" => Ok(Token::CONSTANT(identifier.clone())),
        "exit" => Ok(Token::CONSTANT(identifier.clone())),
        "false" => Ok(Token::CONSTANT(identifier.clone())),
        "hash" => Ok(Token::CONSTANT(identifier.clone())),
        "kill" => Ok(Token::CONSTANT(identifier.clone())),
        "read" => Ok(Token::CONSTANT(identifier.clone())),
        "source" => Ok(Token::CONSTANT(identifier.clone())),
        "unset" => Ok(Token::CONSTANT(identifier.clone())),
        "test" => Ok(Token::CONSTANT(identifier.clone())),
        "true" => Ok(Token::CONSTANT(identifier.clone())),
        "printf" => Ok(Token::CONSTANT(identifier.clone())),
        "case" => Ok(Token::KEYWORD(identifier.clone())),
        "continue" => Ok(Token::KEYWORD(identifier.clone())),
        "do" => Ok(Token::KEYWORD(identifier.clone())),
        "done" => Ok(Token::KEYWORD(identifier.clone())),
        "elif" => Ok(Token::KEYWORD(identifier.clone())),
        "else" => Ok(Token::KEYWORD(identifier.clone())),
        "esac" => Ok(Token::KEYWORD(identifier.clone())),
        "export" => Ok(Token::KEYWORD(identifier.clone())),
        "fi" => Ok(Token::KEYWORD(identifier.clone())),
        "for" => Ok(Token::KEYWORD(identifier.clone())),
        "function" => Ok(Token::KEYWORD(identifier.clone())),
        "if" => Ok(Token::KEYWORD(identifier.clone())),
        "in" => Ok(Token::KEYWORD(identifier.clone())),
        "local" => Ok(Token::KEYWORD(identifier.clone())),
        "return" => Ok(Token::KEYWORD(identifier.clone())),
        "select" => Ok(Token::KEYWORD(identifier.clone())),
        "then" => Ok(Token::KEYWORD(identifier.clone())),
        "time" => Ok(Token::KEYWORD(identifier.clone())),
        "until" => Ok(Token::KEYWORD(identifier.clone())),
        "while" => Ok(Token::KEYWORD(identifier.clone())),
        "EOF" => Ok(Token::KEYWORD(identifier.clone())),
        _ => Err(String::from("Not a keyword")),
    }
}
