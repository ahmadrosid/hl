multi_line_comment: "/*,*/"
multi_line_string: "`,`"
constant: "true,false,undefined,null"
var:
  VINFINITY: "Infinity"
  VNAN: "NaN"
  MATH: Math
  DATE: Date
entity_prefix:
  ENTITY_DOT: "."
entity_suffix:
  left_brace: (
  colon: ":"
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  RENDER_MULTI_LINE_STRING: true
  ACCEPT_ENTITY_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_SUFFIX: "self.ch == ' ' || self.ch == ':' || self.ch == ':' || self.ch == '(' || self.ch == '{' || self.ch == '\\n'"
  ACCEPT_HEXADECIMAL_NUMBER: true
  PREFIX_ONE_LINE_COMMENT: //
keyword: "async,await,break,case,catch,class,const,continue,debugger,default,delete,do,else,enum,export,extends,finally,for,function,if,implements,import,in,instanceof,interface,let,new,package,private,protected,public,return,super,switch,static,this,throw,try,typeof,var,void,while,with,yield"