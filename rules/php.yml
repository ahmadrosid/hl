multi_line_comment: "/*,*/"
constant: "true,false,null,string,array"
entity_tag:
  HTML: html
  BODY: body
  DIV: div
  SPAN: span
  APPLET: applet
  OBJECT: object
  IFRAME: iframe
  H1: h1
  H2: h2
  H3: h3
  H4: h4
  H5: h5
  H6: h6
  P: p
  BLOCKQUOTE: blockquote
  BUTTON: button
  PRE: pre
  A: a
  ABBR: abbr
  ACRONYM: acronym
  ADDRESS: address
  BIG: big
  CITE: cite
  CODE: code
  DEL: del
  DFN: dfn
  EM: em
  IMG: img
  INS: ins
  KBD: kbd
  Q: q
  S: s
  SAMP: samp
  SELECT: select
  SMALL: small
  STRIKE: strike
  STRONG: strong
  SUB: sub
  SUP: sup
  SCRIPT: script
  TT: tt
  TVAR: var
  B: b
  U: u
  I: i
  CENTER: center
  DL: dl
  DT: dt
  DD: dd
  OL: ol
  UL: ul
  LI: li
  FIELDSET: fieldset
  FORM: form
  LABEL: label
  LEGEND: legend
  TABLE: table
  CAPTION: caption
  TBODY: tbody
  TFOOT: tfoot
  THEAD: thead
  TR: tr
  TH: th
  TD: td
  ARTICLE: article
  CANVAS: canvas
  EMBED: embed
  OUTPUT: output
  RUBY: ruby
  SUMMARY: summary
  TIME: time
  MARK: mark
  AUDIO: audio
  VIDEOARTICLE: videoarticle
  ASIDE: aside
  DETAILS: details
  FIGCAPTION: figcaption
  FIGURE: figure
  FOOTER: footer
  HEADER: header
  HGROUP: hgroup
  MENU: menu
  NAV: nav
  SECTION: section
  VIDEO: video
  TEXTAREA: textarea
  INPUT: input
  HR: hr

entity_prefix:
  ENTITY_DOT: '>'

entity_suffix:
  left_brace: "("

keyword:
  abstract: "abstract"
  as: "as"
  break: "break"
  and: "and"
  callable: "callable"
  case: "case"
  catch: "catch"
  clone: "clone"
  const: "const"
  continue: "continue"
  declare: "declare"
  do: "do"
  echo: "echo"
  else: "else"
  enddeclare: "enddeclare"
  endfor: "endfor"
  endforeach: "endforeach"
  endswitch: "endswitch"
  endwhile: "endwhile"
  eval: "eval"
  finally: "finally"
  for: "for"
  foreach: "foreach"
  global: "global"
  goto: "goto"
  if: "if"
  implements: "implements"
  include_once: "include_once"
  instanceof: "instanceof"
  insteadof: "insteadof"
  interface: "interface"
  namespace: "namespace"
  new: "new"
  or: "or"
  private: "private"
  protected: "protected"
  public: "public"
  require: "require"
  require_once: "require_once"
  return: "return"
  static: "static"
  switch: "switch"
  throw: "throw"
  try: "try"
  use: "use"
  class: "class"
  default: "default"
  elseif: "elseif"
  endif: "endif"
  extends: "extends"
  function: "function"
  include: "include"
  print: "print"
  trait: "trait"
  while: "while"
  xor: "xor"
  yield: "yield"

condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  ACCEPT_ENTITY_TAG_SUFFIX: "self.ch.is_numeric()"
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  ACCEPT_ENTITY_TAG_PREFIX: "<"
  ENTITY_TAG_PREFIX_CHAR: "?"
  ENTITY_CLOSE_TAG_SUFFIX_CHAR: ">"
  ACCEPT_PREFIX_VAR: "$"
  VAR_CONSTANT_PREFIX: "["
  ENCODE_LT: "<"
  ENCODE_LT_STRING: "&lt;"
  CONSTANT_SUFFIX_CHAR: "="
  ACCEPT_CONSTANT_SUFFIX_KEYWORD: true
  ACCEPT_CONSTANT_SUFFIX_IDENTIFIER: true
  CONSTANT_SUFFIX_KEYWORD: "class"
  ACCEPT_DASH_IDENTIFIER: "-"
  PREFIX_ONE_LINE_COMMENT: "//"