multi_line_comment: "/*,*/"
constant: "true,false,null,this"
entity_suffix:
  left_brace: (
single_keyword:
  - "="
  - "?"
double_keyword:
  comparison: "=="
  double_arrow: "=>"
  logical_and: "&&"
  nullish_coalescing_operator: "??"
  inequality: "!="
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  ACCEPT_ENTITY_TAG_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  ACCEPT_HEXADECIMAL_NUMBER: true
  PREFIX_ONE_LINE_COMMENT: //
keyword: "abstract,as,async,await,base,bool,break,byte,case,catch,char,checked,class,const,continue,decimal,default,delegate,do,double,else,enum,event,explicit,extern,finally,fixed,float,for,foreach,goto,if,implicit,in,int,interface,internal,is,lock,long,namespace,new,object,operator,out,override,params,private,protected,public,readonly,ref,return,sbyte,sealed,short,sizeof,stackalloc,static,string,struct,switch,throw,try,typeof,uint,ulong,unchecked,unsafe,ushort,using,virtual,var,void,volatile,while,yield,add,remove,region,endregion,where,get,set,global"