multi_line_comment: "/*,*/"
constant: "true,false,this,nullptr,NULL,size_t,int64_t,uint32_t"
single_constant:
  - "<"
  - ">"
entity_suffix:
  left_brace: (
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  ACCEPT_ENTITY_TAG_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  ACCEPT_HEXADECIMAL_NUMBER: true
  PREFIX_ONE_LINE_COMMENT: //
keyword: "asm,auto,bool,break,const,class,char,catch,constexpr,continue,default,define,delete,do,double,else,enum,extern,explicit,float,final,friend,for,if,inline,int,long,namespace,new,noexcept,return,override,operator,include,endif,public,private,protected,pragma,short,signed,sizeof,static,static_cast,struct,switch,template,typedef,typename,try,throw,using,union,unsigned,void,virtual,volatile,while"