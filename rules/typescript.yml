multi_line_comment: "/*,*/"
multi_line_string: "`,`"
constant: "true,false,undefined,null,number,string,boolean,type"
entity_prefix:
  ENTITY_DOT: "."
entity_suffix:
  left_brace: (
  colon: ":"
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  RENDER_MULTI_LINE_STRING: true
  ACCEPT_CHAR_IDENTIFIER: "?"
  ACCEPT_ENTITY_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_SUFFIX: "self.ch == ' ' || self.ch == ':' || self.ch == ':' || self.ch == '(' || self.ch == '{' || self.ch == '\\n'"
  MARK_KEYWORD_AS_ENTITY_ON_PREFIX: "."
  PREFIX_ONE_LINE_COMMENT: //
keyword: "async,await,break,as,switch,case,if,throw,else,var,get,module,instanceof,import,from,typeof,public,private,enum,export,finally,for,while,void,super,this,in,return,any,extends,static,let,package,implements,interface,function,new,try,yield,const,continue,do,catch,default,class"
var: "Infinity,NaN,Math,Date"