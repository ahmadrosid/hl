multi_line_comment: "/*,*/"
constant: "true,false,NULL,size_t"
single_constant:
  - "<"
  - ">"
entity_suffix:
  left_brace: (
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  ACCEPT_ENTITY_TAG_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  ACCEPT_HEXADECIMAL_NUMBER: true
  PREFIX_ONE_LINE_COMMENT: //
keyword: "asm,const,char,case,catch,continue,do,default,define,delete,double,else,extern,enum,float,goto,for,if,ifdef,ifndef,endif,long,return,int,include,inline,namespace,unsigned,union,using,break,void,volatile,register,signed,static,struct,sizeof,short,switch,typedef,try,throw,while"