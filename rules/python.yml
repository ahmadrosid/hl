multi_line_string: "''','''"
constant: "True,False,None,not,in,self"
entity_suffix:
  left_brace: (
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_STRING_ONE_QUOTE: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  RENDER_MULTI_LINE_STRING: true
  ACCEPT_ENTITY_TAG_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  ACCEPT_HEXADECIMAL_NUMBER: true
  PREFIX_ONE_LINE_COMMENT: "#"
keyword: "as,and,assert,async,await,break,class,continue,else,elif,except,def,del,finally,for,from,global,if,is,import,lambda,nonlocal,pass,print,raise,return,try,with,while,yield"