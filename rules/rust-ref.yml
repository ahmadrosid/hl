---
multi_line_comment: "/*,*/"
multi_line_string: "r#\",\"#"
constant: "true,false,None"
entity_prefix:
  ENTITY_DOT: "."
entity_suffix:
  left_brace: (
  bang: "!"
single_keyword:
  - "&"
  - "*"
  - "<"
  - ">"
  - "-"
  - "="
  - "|"
double_keyword:
  comparison: "=="
  double_arrow: "=>"
  path_separator: "::"
  logical_and: "&&"
condition:
  ACCEPT_ESCAPED_STRING: true
  ACCEPT_HEXADECIMAL_NUMBER: true
  ACCEPT_STRING_DOUBLE_QUOTE: true
  ACCEPT_STRING_ONE_QUOTE: true
  RENDER_MULTI_LINE_STRING: true
  ACCEPT_ENTITY_TAG_SUFFIX: self.ch.is_numeric()
  BREAK_ENTITY_TAG_SUFFIX: "!self.ch.is_numeric() && !is_letter(self.ch)"
  PREFIX_ONE_LINE_COMMENT: //
keyword: "as,break,const,continue,char,crate,else,enum,extern,fn,for,if,impl,in,let,loop,match,mod,move,mut,pub,ref,return,self,Self,static,struct,super,trait,type,unsafe,use,where,while,async,await,dyn,abstract,become,box,do,final,macro,override,priv,typeof,unsized,virtual,yield,try,union,'static,String,Option,Default,Result,Vec,i8,i16,i32,i64,i128,isize,u8,u16,u32,u64,u128,usize,f32,f64"