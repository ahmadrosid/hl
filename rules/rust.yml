slash_comment: true
slash_star_comment: true

constant:
    TRUE: 'true'
    FALSE: 'false'
    NONE: 'None'

entity_prefix:
    ENTITY_DOT: '.'

entity_suffix:
    ENTITY_LBRACE: '('
    ENTITY_BANG: '!'

keyword:
    as: as
    break: break
    const: const
    continue: continue
    crate: crate
    else: else
    enum: enum
    extern: extern
    fn: fn
    for: for
    if: if
    impl: impl
    in: in
    let: let
    loop: loop
    match: match
    mod: mod
    move: move
    mut: mut
    pub: pub
    ref: ref
    return: return
    selfvalue: self
    selftype: Self
    static: static
    struct: struct
    super: super
    trait: trait
    type: type
    unsafe: unsafe
    use: use
    where: where
    while: while
    async : async
    await : await
    dyn : dyn
    abstract : abstract
    become : become
    box : box
    do : do
    final : final
    macro : macro
    override : override
    priv : priv
    typeof : typeof
    unsized : unsized
    virtual : virtual
    yield : yield
    try : try
    union : union
    staticlifetime : "'static"
    option: Option
    default: Default
    result: Result
    vec: Vec
    i8: i8
    i16: i16
    i32: i32
    i64: i64
    i128: i128
    isize: isize
    u8: u8
    u16: u16
    u32: u32
    u64: u64
    u128: u128
    usize: usize

single_keyword:
    - "&"
    - "*"
    - "<"
    - ">"

condition:
    ACCEPT_ESCAPED_STRING: true
    ACCEPT_HEXADECIMAL_NUMBER: true
    ACCEPT_STRING_DOUBLE_QUOTE: true
    ACCEPT_STRING_ONE_QUOTE: true
    ACCEPT_ENTITY_TAG_SUFFIX: "is_digit(self.ch)"
    BREAK_ENTITY_TAG_SUFFIX: "!is_digit(self.ch) && !is_letter(self.ch)"
