<table class="highlight-table">
<tbody>
<tr><td class="hl-num" data-line="1"></td><td><span class="hl-k">package</span> org.schabi.newpipe;</td></tr>
<tr><td class="hl-num" data-line="2"></td><td></td></tr>
<tr><td class="hl-num" data-line="3"></td><td><span class="hl-k">import</span> java.io.IOException;</td></tr>
<tr><td class="hl-num" data-line="4"></td><td><span class="hl-k">import</span> java.io.InterruptedIOException;</td></tr>
<tr><td class="hl-num" data-line="5"></td><td><span class="hl-k">import</span> java.net.SocketException;</td></tr>
<tr><td class="hl-num" data-line="6"></td><td><span class="hl-k">import</span> java.util.Arrays;</td></tr>
<tr><td class="hl-num" data-line="7"></td><td><span class="hl-k">import</span> java.util.Collections;</td></tr>
<tr><td class="hl-num" data-line="8"></td><td><span class="hl-k">import</span> java.util.List;</td></tr>
<tr><td class="hl-num" data-line="9"></td><td></td></tr>
<tr><td class="hl-num" data-line="10"></td><td><span class="hl-cmt">/*</span></td></tr>
<tr><td class="hl-num" data-line="11"></td><td><span class="hl-cmt"> * Copyright (C) Hans-Christoph Steiner 2016 <hans@eds.org></span></td></tr>
<tr><td class="hl-num" data-line="12"></td><td><span class="hl-cmt"> * App.java is part of NewPipe.</span></td></tr>
<tr><td class="hl-num" data-line="13"></td><td><span class="hl-cmt"> *</span></td></tr>
<tr><td class="hl-num" data-line="14"></td><td><span class="hl-cmt"> * You should have received a copy of the GNU General Public License</span></td></tr>
<tr><td class="hl-num" data-line="15"></td><td><span class="hl-cmt"> * along with NewPipe.  If not, see <http://www.gnu.org/licenses/>.</span></td></tr>
<tr><td class="hl-num" data-line="16"></td><td><span class="hl-cmt"> */</span></td></tr>
<tr><td class="hl-num" data-line="17"></td><td><span class="hl-k">public</span> <span class="hl-k">class</span> App <span class="hl-k">extends</span> MultiDexApplication {</td></tr>
<tr><td class="hl-num" data-line="18"></td><td>    <span class="hl-k">public</span> <span class="hl-k">static</span> <span class="hl-k">final</span> String PACKAGE_NAME = BuildConfig.APPLICATION_ID;</td></tr>
<tr><td class="hl-num" data-line="19"></td><td>    <span class="hl-k">private</span> <span class="hl-k">static</span> <span class="hl-k">final</span> String TAG = App.<span class="hl-k">class</span>.<span class="hl-en">toString</span>();</td></tr>
<tr><td class="hl-num" data-line="20"></td><td>    <span class="hl-k">private</span> <span class="hl-k">static</span> App app;</td></tr>
<tr><td class="hl-num" data-line="21"></td><td></td></tr>
<tr><td class="hl-num" data-line="22"></td><td>    @<span class="hl-k">NonNull</span></td></tr>
<tr><td class="hl-num" data-line="23"></td><td>    <span class="hl-k">public</span> <span class="hl-k">static</span> App <span class="hl-en">getApp</span>() {</td></tr>
<tr><td class="hl-num" data-line="24"></td><td>        <span class="hl-k">return</span> app;</td></tr>
<tr><td class="hl-num" data-line="25"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="26"></td><td></td></tr>
<tr><td class="hl-num" data-line="27"></td><td>    @<span class="hl-k">Override</span></td></tr>
<tr><td class="hl-num" data-line="28"></td><td>    <span class="hl-k">protected</span> <span class="hl-k">void</span> <span class="hl-en">attachBaseContext</span>(<span class="hl-k">final</span> Context base) {</td></tr>
<tr><td class="hl-num" data-line="29"></td><td>        <span class="hl-c">super</span>.<span class="hl-en">attachBaseContext</span>(base);</td></tr>
<tr><td class="hl-num" data-line="30"></td><td>        <span class="hl-en">initACRA</span>();</td></tr>
<tr><td class="hl-num" data-line="31"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="32"></td><td></td></tr>
<tr><td class="hl-num" data-line="33"></td><td>    @<span class="hl-k">Override</span></td></tr>
<tr><td class="hl-num" data-line="34"></td><td>    <span class="hl-k">public</span> <span class="hl-k">void</span> <span class="hl-en">onCreate</span>() {</td></tr>
<tr><td class="hl-num" data-line="35"></td><td>        <span class="hl-c">super</span>.<span class="hl-en">onCreate</span>();</td></tr>
<tr><td class="hl-num" data-line="36"></td><td></td></tr>
<tr><td class="hl-num" data-line="37"></td><td>        app = <span class="hl-c">this</span>;</td></tr>
<tr><td class="hl-num" data-line="38"></td><td></td></tr>
<tr><td class="hl-num" data-line="39"></td><td>        <span class="hl-k">if</span> (ProcessPhoenix.<span class="hl-en">isPhoenixProcess</span>(<span class="hl-c">this</span>)) {</td></tr>
<tr><td class="hl-num" data-line="40"></td><td>            Log.<span class="hl-en">i</span>(TAG, <span class="hl-s">"This is a phoenix process! "</span></td></tr>
<tr><td class="hl-num" data-line="41"></td><td>                    + <span class="hl-s">"Aborting initialization of App[onCreate]"</span>);</td></tr>
<tr><td class="hl-num" data-line="42"></td><td>            <span class="hl-k">return</span>;</td></tr>
<tr><td class="hl-num" data-line="43"></td><td>        }</td></tr>
<tr><td class="hl-num" data-line="44"></td><td></td></tr>
<tr><td class="hl-num" data-line="45"></td><td>        <span class="hl-cmt">// Initialize settings first because others inits can use its values</span></td></tr>
<tr><td class="hl-num" data-line="46"></td><td>        NewPipeSettings.<span class="hl-en">initSettings</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="47"></td><td></td></tr>
<tr><td class="hl-num" data-line="48"></td><td>        NewPipe.<span class="hl-en">init</span>(<span class="hl-en">getDownloader</span>(),</td></tr>
<tr><td class="hl-num" data-line="49"></td><td>            Localization.<span class="hl-en">getPreferredLocalization</span>(<span class="hl-c">this</span>),</td></tr>
<tr><td class="hl-num" data-line="50"></td><td>            Localization.<span class="hl-en">getPreferredContentCountry</span>(<span class="hl-c">this</span>));</td></tr>
<tr><td class="hl-num" data-line="51"></td><td>        Localization.<span class="hl-en">initPrettyTime</span>(Localization.<span class="hl-en">resolvePrettyTime</span>(<span class="hl-en">getApplicationContext</span>()));</td></tr>
<tr><td class="hl-num" data-line="52"></td><td></td></tr>
<tr><td class="hl-num" data-line="53"></td><td>        StateSaver.<span class="hl-en">init</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="54"></td><td>        <span class="hl-en">initNotificationChannels</span>();</td></tr>
<tr><td class="hl-num" data-line="55"></td><td></td></tr>
<tr><td class="hl-num" data-line="56"></td><td>        ServiceHelper.<span class="hl-en">initServices</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="57"></td><td></td></tr>
<tr><td class="hl-num" data-line="58"></td><td>        <span class="hl-cmt">// Initialize image loader</span></td></tr>
<tr><td class="hl-num" data-line="59"></td><td>        <span class="hl-k">final</span> SharedPreferences prefs = PreferenceManager.<span class="hl-en">getDefaultSharedPreferences</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="60"></td><td>        PicassoHelper.<span class="hl-en">init</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="61"></td><td>        PicassoHelper.<span class="hl-en">setShouldLoadImages</span>(</td></tr>
<tr><td class="hl-num" data-line="62"></td><td>                prefs.<span class="hl-en">getBoolean</span>(<span class="hl-en">getString</span>(R.string.download_thumbnail_key), <span class="hl-c">true</span>));</td></tr>
<tr><td class="hl-num" data-line="63"></td><td>        PicassoHelper.<span class="hl-en">setIndicatorsEnabled</span>(MainActivity.DEBUG</td></tr>
<tr><td class="hl-num" data-line="64"></td><td>                && prefs.<span class="hl-en">getBoolean</span>(<span class="hl-en">getString</span>(R.string.show_image_indicators_key), <span class="hl-c">false</span>));</td></tr>
<tr><td class="hl-num" data-line="65"></td><td></td></tr>
<tr><td class="hl-num" data-line="66"></td><td>        <span class="hl-en">configureRxJavaErrorHandler</span>();</td></tr>
<tr><td class="hl-num" data-line="67"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="68"></td><td></td></tr>
<tr><td class="hl-num" data-line="69"></td><td>    @<span class="hl-k">Override</span></td></tr>
<tr><td class="hl-num" data-line="70"></td><td>    <span class="hl-k">public</span> <span class="hl-k">void</span> <span class="hl-en">onTerminate</span>() {</td></tr>
<tr><td class="hl-num" data-line="71"></td><td>        <span class="hl-c">super</span>.<span class="hl-en">onTerminate</span>();</td></tr>
<tr><td class="hl-num" data-line="72"></td><td>        PicassoHelper.<span class="hl-en">terminate</span>();</td></tr>
<tr><td class="hl-num" data-line="73"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="74"></td><td></td></tr>
<tr><td class="hl-num" data-line="75"></td><td>    <span class="hl-k">protected</span> Downloader <span class="hl-en">getDownloader</span>() {</td></tr>
<tr><td class="hl-num" data-line="76"></td><td>        <span class="hl-k">final</span> DownloaderImpl downloader = DownloaderImpl.<span class="hl-en">init</span>(null);</td></tr>
<tr><td class="hl-num" data-line="77"></td><td>        <span class="hl-en">setCookiesToDownloader</span>(downloader);</td></tr>
<tr><td class="hl-num" data-line="78"></td><td>        <span class="hl-k">return</span> downloader;</td></tr>
<tr><td class="hl-num" data-line="79"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="80"></td><td></td></tr>
<tr><td class="hl-num" data-line="81"></td><td>    <span class="hl-k">protected</span> <span class="hl-k">void</span> <span class="hl-en">setCookiesToDownloader</span>(<span class="hl-k">final</span> DownloaderImpl downloader) {</td></tr>
<tr><td class="hl-num" data-line="82"></td><td>        <span class="hl-k">final</span> SharedPreferences prefs = PreferenceManager.<span class="hl-en">getDefaultSharedPreferences</span>(</td></tr>
<tr><td class="hl-num" data-line="83"></td><td>                <span class="hl-en">getApplicationContext</span>());</td></tr>
<tr><td class="hl-num" data-line="84"></td><td>        <span class="hl-k">final</span> String key = <span class="hl-en">getApplicationContext</span>().<span class="hl-en">getString</span>(R.string.recaptcha_cookies_key);</td></tr>
<tr><td class="hl-num" data-line="85"></td><td>        downloader.<span class="hl-en">setCookie</span>(ReCaptchaActivity.RECAPTCHA_COOKIES_KEY, prefs.<span class="hl-en">getString</span>(key, null));</td></tr>
<tr><td class="hl-num" data-line="86"></td><td>        downloader.<span class="hl-en">updateYoutubeRestrictedModeCookies</span>(<span class="hl-en">getApplicationContext</span>());</td></tr>
<tr><td class="hl-num" data-line="87"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="88"></td><td></td></tr>
<tr><td class="hl-num" data-line="89"></td><td>    <span class="hl-k">private</span> <span class="hl-k">void</span> <span class="hl-en">configureRxJavaErrorHandler</span>() {</td></tr>
<tr><td class="hl-num" data-line="90"></td><td>        <span class="hl-cmt">// https://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#error-handling</span></td></tr>
<tr><td class="hl-num" data-line="91"></td><td>        RxJavaPlugins.<span class="hl-en">setErrorHandler</span>(<span class="hl-k">new</span> Consumer<Throwable>() {</td></tr>
<tr><td class="hl-num" data-line="92"></td><td>            @<span class="hl-k">Override</span></td></tr>
<tr><td class="hl-num" data-line="93"></td><td>            <span class="hl-k">public</span> <span class="hl-k">void</span> <span class="hl-en">accept</span>(@<span class="hl-k">NonNull</span> <span class="hl-k">final</span> Throwable throwable) {</td></tr>
<tr><td class="hl-num" data-line="94"></td><td>                Log.<span class="hl-en">e</span>(TAG, <span class="hl-s">"RxJavaPlugins.ErrorHandler called with -> : "</span></td></tr>
<tr><td class="hl-num" data-line="95"></td><td>                        + <span class="hl-s">"throwable = ["</span> + throwable.<span class="hl-en">getClass</span>().<span class="hl-en">getName</span>() + <span class="hl-s">"]"</span>);</td></tr>
<tr><td class="hl-num" data-line="96"></td><td></td></tr>
<tr><td class="hl-num" data-line="97"></td><td>                <span class="hl-k">final</span> Throwable actualThrowable;</td></tr>
<tr><td class="hl-num" data-line="98"></td><td>                <span class="hl-k">if</span> (throwable <span class="hl-k">instanceof</span> UndeliverableException) {</td></tr>
<tr><td class="hl-num" data-line="99"></td><td>                    <span class="hl-cmt">// As UndeliverableException is a wrapper,</span></td></tr>
<tr><td class="hl-num" data-line="100"></td><td>                    <span class="hl-cmt">// get the cause of it to get the "real" exception</span></td></tr>
<tr><td class="hl-num" data-line="101"></td><td>                    actualThrowable = throwable.<span class="hl-en">getCause</span>();</td></tr>
<tr><td class="hl-num" data-line="102"></td><td>                } <span class="hl-k">else</span> {</td></tr>
<tr><td class="hl-num" data-line="103"></td><td>                    actualThrowable = throwable;</td></tr>
<tr><td class="hl-num" data-line="104"></td><td>                }</td></tr>
<tr><td class="hl-num" data-line="105"></td><td></td></tr>
<tr><td class="hl-num" data-line="106"></td><td>                <span class="hl-k">final</span> List<Throwable> errors;</td></tr>
<tr><td class="hl-num" data-line="107"></td><td>                <span class="hl-k">if</span> (actualThrowable <span class="hl-k">instanceof</span> CompositeException) {</td></tr>
<tr><td class="hl-num" data-line="108"></td><td>                    errors = ((CompositeException) actualThrowable).<span class="hl-en">getExceptions</span>();</td></tr>
<tr><td class="hl-num" data-line="109"></td><td>                } <span class="hl-k">else</span> {</td></tr>
<tr><td class="hl-num" data-line="110"></td><td>                    errors = Collections.<span class="hl-en">singletonList</span>(actualThrowable);</td></tr>
<tr><td class="hl-num" data-line="111"></td><td>                }</td></tr>
<tr><td class="hl-num" data-line="112"></td><td></td></tr>
<tr><td class="hl-num" data-line="113"></td><td>                for (<span class="hl-k">final</span> Throwable error : errors) {</td></tr>
<tr><td class="hl-num" data-line="114"></td><td>                    <span class="hl-k">if</span> (<span class="hl-en">isThrowableIgnored</span>(error)) {</td></tr>
<tr><td class="hl-num" data-line="115"></td><td>                        <span class="hl-k">return</span>;</td></tr>
<tr><td class="hl-num" data-line="116"></td><td>                    }</td></tr>
<tr><td class="hl-num" data-line="117"></td><td>                    <span class="hl-k">if</span> (<span class="hl-en">isThrowableCritical</span>(error)) {</td></tr>
<tr><td class="hl-num" data-line="118"></td><td>                        <span class="hl-en">reportException</span>(error);</td></tr>
<tr><td class="hl-num" data-line="119"></td><td>                        <span class="hl-k">return</span>;</td></tr>
<tr><td class="hl-num" data-line="120"></td><td>                    }</td></tr>
<tr><td class="hl-num" data-line="121"></td><td>                }</td></tr>
<tr><td class="hl-num" data-line="122"></td><td></td></tr>
<tr><td class="hl-num" data-line="123"></td><td>                <span class="hl-cmt">// Out-of-lifecycle exceptions should only be reported if a debug user wishes so,</span></td></tr>
<tr><td class="hl-num" data-line="124"></td><td>                <span class="hl-cmt">// When exception is not reported, log it</span></td></tr>
<tr><td class="hl-num" data-line="125"></td><td>                <span class="hl-k">if</span> (<span class="hl-en">isDisposedRxExceptionsReported</span>()) {</td></tr>
<tr><td class="hl-num" data-line="126"></td><td>                    <span class="hl-en">reportException</span>(actualThrowable);</td></tr>
<tr><td class="hl-num" data-line="127"></td><td>                } <span class="hl-k">else</span> {</td></tr>
<tr><td class="hl-num" data-line="128"></td><td>                    Log.<span class="hl-en">e</span>(TAG, <span class="hl-s">"RxJavaPlugin: Undeliverable Exception received: "</span>, actualThrowable);</td></tr>
<tr><td class="hl-num" data-line="129"></td><td>                }</td></tr>
<tr><td class="hl-num" data-line="130"></td><td>            }</td></tr>
<tr><td class="hl-num" data-line="131"></td><td></td></tr>
<tr><td class="hl-num" data-line="132"></td><td>            <span class="hl-k">private</span> <span class="hl-k">boolean</span> <span class="hl-en">isThrowableIgnored</span>(@<span class="hl-k">NonNull</span> <span class="hl-k">final</span> Throwable throwable) {</td></tr>
<tr><td class="hl-num" data-line="133"></td><td>                <span class="hl-cmt">// Don't crash the application over a simple network problem</span></td></tr>
<tr><td class="hl-num" data-line="134"></td><td>                <span class="hl-k">return</span> ExceptionUtils.<span class="hl-en">hasAssignableCause</span>(throwable,</td></tr>
<tr><td class="hl-num" data-line="135"></td><td>                        <span class="hl-cmt">// network api cancellation</span></td></tr>
<tr><td class="hl-num" data-line="136"></td><td>                        IOException.<span class="hl-k">class</span>, SocketException.<span class="hl-k">class</span>,</td></tr>
<tr><td class="hl-num" data-line="137"></td><td>                        <span class="hl-cmt">// blocking code disposed</span></td></tr>
<tr><td class="hl-num" data-line="138"></td><td>                        InterruptedException.<span class="hl-k">class</span>, InterruptedIOException.<span class="hl-k">class</span>);</td></tr>
<tr><td class="hl-num" data-line="139"></td><td>            }</td></tr>
<tr><td class="hl-num" data-line="140"></td><td></td></tr>
<tr><td class="hl-num" data-line="141"></td><td>            <span class="hl-k">private</span> <span class="hl-k">boolean</span> <span class="hl-en">isThrowableCritical</span>(@<span class="hl-k">NonNull</span> <span class="hl-k">final</span> Throwable throwable) {</td></tr>
<tr><td class="hl-num" data-line="142"></td><td>                <span class="hl-cmt">// Though these exceptions cannot be ignored</span></td></tr>
<tr><td class="hl-num" data-line="143"></td><td>                <span class="hl-k">return</span> ExceptionUtils.<span class="hl-en">hasAssignableCause</span>(throwable,</td></tr>
<tr><td class="hl-num" data-line="144"></td><td>                        NullPointerException.<span class="hl-k">class</span>, IllegalArgumentException.<span class="hl-k">class</span>, <span class="hl-cmt">// bug in app</span></td></tr>
<tr><td class="hl-num" data-line="145"></td><td>                        OnErrorNotImplementedException.<span class="hl-k">class</span>, MissingBackpressureException.<span class="hl-k">class</span>,</td></tr>
<tr><td class="hl-num" data-line="146"></td><td>                        IllegalStateException.<span class="hl-k">class</span>); <span class="hl-cmt">// bug in operator</span></td></tr>
<tr><td class="hl-num" data-line="147"></td><td>            }</td></tr>
<tr><td class="hl-num" data-line="148"></td><td></td></tr>
<tr><td class="hl-num" data-line="149"></td><td>            <span class="hl-k">private</span> <span class="hl-k">void</span> <span class="hl-en">reportException</span>(@<span class="hl-k">NonNull</span> <span class="hl-k">final</span> Throwable throwable) {</td></tr>
<tr><td class="hl-num" data-line="150"></td><td>                <span class="hl-cmt">// Throw uncaught exception that will trigger the report system</span></td></tr>
<tr><td class="hl-num" data-line="151"></td><td>                Thread.<span class="hl-en">currentThread</span>().<span class="hl-en">getUncaughtExceptionHandler</span>()</td></tr>
<tr><td class="hl-num" data-line="152"></td><td>                        .<span class="hl-en">uncaughtException</span>(Thread.<span class="hl-en">currentThread</span>(), throwable);</td></tr>
<tr><td class="hl-num" data-line="153"></td><td>            }</td></tr>
<tr><td class="hl-num" data-line="154"></td><td>        });</td></tr>
<tr><td class="hl-num" data-line="155"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="156"></td><td></td></tr>
<tr><td class="hl-num" data-line="157"></td><td>    <span class="hl-cmt">/**</span></td></tr>
<tr><td class="hl-num" data-line="158"></td><td><span class="hl-cmt">     * Called in {@link #attachBaseContext(Context)} after calling the {@code super} method.</span></td></tr>
<tr><td class="hl-num" data-line="159"></td><td><span class="hl-cmt">     * Should be overridden if MultiDex is enabled, since it has to be initialized before ACRA.</span></td></tr>
<tr><td class="hl-num" data-line="160"></td><td><span class="hl-cmt">     */</span></td></tr>
<tr><td class="hl-num" data-line="161"></td><td>    <span class="hl-k">protected</span> <span class="hl-k">void</span> <span class="hl-en">initACRA</span>() {</td></tr>
<tr><td class="hl-num" data-line="162"></td><td>        <span class="hl-k">if</span> (ACRA.<span class="hl-en">isACRASenderServiceProcess</span>()) {</td></tr>
<tr><td class="hl-num" data-line="163"></td><td>            <span class="hl-k">return</span>;</td></tr>
<tr><td class="hl-num" data-line="164"></td><td>        }</td></tr>
<tr><td class="hl-num" data-line="165"></td><td></td></tr>
<tr><td class="hl-num" data-line="166"></td><td>        try {</td></tr>
<tr><td class="hl-num" data-line="167"></td><td>            <span class="hl-k">final</span> CoreConfiguration acraConfig = <span class="hl-k">new</span> <span class="hl-en">CoreConfigurationBuilder</span>(<span class="hl-c">this</span>)</td></tr>
<tr><td class="hl-num" data-line="168"></td><td>                    .<span class="hl-en">setBuildConfigClass</span>(BuildConfig.<span class="hl-k">class</span>)</td></tr>
<tr><td class="hl-num" data-line="169"></td><td>                    .<span class="hl-en">build</span>();</td></tr>
<tr><td class="hl-num" data-line="170"></td><td>            ACRA.<span class="hl-en">init</span>(<span class="hl-c">this</span>, acraConfig);</td></tr>
<tr><td class="hl-num" data-line="171"></td><td>        } catch (<span class="hl-k">final</span> ACRAConfigurationException exception) {</td></tr>
<tr><td class="hl-num" data-line="172"></td><td>            exception.<span class="hl-en">printStackTrace</span>();</td></tr>
<tr><td class="hl-num" data-line="173"></td><td>            ErrorUtil.<span class="hl-en">openActivity</span>(<span class="hl-c">this</span>, <span class="hl-k">new</span> <span class="hl-en">ErrorInfo</span>(exception,</td></tr>
<tr><td class="hl-num" data-line="174"></td><td>                    UserAction.SOMETHING_ELSE, <span class="hl-s">"Could not initialize ACRA crash report"</span>));</td></tr>
<tr><td class="hl-num" data-line="175"></td><td>        }</td></tr>
<tr><td class="hl-num" data-line="176"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="177"></td><td></td></tr>
<tr><td class="hl-num" data-line="178"></td><td>    <span class="hl-k">private</span> <span class="hl-k">void</span> <span class="hl-en">initNotificationChannels</span>() {</td></tr>
<tr><td class="hl-num" data-line="179"></td><td>        <span class="hl-cmt">// Keep the importance below DEFAULT to avoid making noise on every notification update for</span></td></tr>
<tr><td class="hl-num" data-line="180"></td><td>        <span class="hl-cmt">// the main and update channels</span></td></tr>
<tr><td class="hl-num" data-line="181"></td><td>        <span class="hl-k">final</span> NotificationChannelCompat mainChannel = <span class="hl-k">new</span> NotificationChannelCompat</td></tr>
<tr><td class="hl-num" data-line="182"></td><td>                .<span class="hl-en">Builder</span>(<span class="hl-en">getString</span>(R.string.notification_channel_id),</td></tr>
<tr><td class="hl-num" data-line="183"></td><td>                        NotificationManagerCompat.IMPORTANCE_LOW)</td></tr>
<tr><td class="hl-num" data-line="184"></td><td>                .<span class="hl-en">setName</span>(<span class="hl-en">getString</span>(R.string.notification_channel_name))</td></tr>
<tr><td class="hl-num" data-line="185"></td><td>                .<span class="hl-en">setDescription</span>(<span class="hl-en">getString</span>(R.string.notification_channel_description))</td></tr>
<tr><td class="hl-num" data-line="186"></td><td>                .<span class="hl-en">build</span>();</td></tr>
<tr><td class="hl-num" data-line="187"></td><td></td></tr>
<tr><td class="hl-num" data-line="188"></td><td>        <span class="hl-k">final</span> NotificationChannelCompat appUpdateChannel = <span class="hl-k">new</span> NotificationChannelCompat</td></tr>
<tr><td class="hl-num" data-line="189"></td><td>                .<span class="hl-en">Builder</span>(<span class="hl-en">getString</span>(R.string.app_update_notification_channel_id),</td></tr>
<tr><td class="hl-num" data-line="190"></td><td>                        NotificationManagerCompat.IMPORTANCE_LOW)</td></tr>
<tr><td class="hl-num" data-line="191"></td><td>                .<span class="hl-en">setName</span>(<span class="hl-en">getString</span>(R.string.app_update_notification_channel_name))</td></tr>
<tr><td class="hl-num" data-line="192"></td><td>                .<span class="hl-en">setDescription</span>(<span class="hl-en">getString</span>(R.string.app_update_notification_channel_description))</td></tr>
<tr><td class="hl-num" data-line="193"></td><td>                .<span class="hl-en">build</span>();</td></tr>
<tr><td class="hl-num" data-line="194"></td><td></td></tr>
<tr><td class="hl-num" data-line="195"></td><td>        <span class="hl-k">final</span> NotificationChannelCompat hashChannel = <span class="hl-k">new</span> NotificationChannelCompat</td></tr>
<tr><td class="hl-num" data-line="196"></td><td>                .<span class="hl-en">Builder</span>(<span class="hl-en">getString</span>(R.string.hash_channel_id),</td></tr>
<tr><td class="hl-num" data-line="197"></td><td>                        NotificationManagerCompat.IMPORTANCE_HIGH)</td></tr>
<tr><td class="hl-num" data-line="198"></td><td>                .<span class="hl-en">setName</span>(<span class="hl-en">getString</span>(R.string.hash_channel_name))</td></tr>
<tr><td class="hl-num" data-line="199"></td><td>                .<span class="hl-en">setDescription</span>(<span class="hl-en">getString</span>(R.string.hash_channel_description))</td></tr>
<tr><td class="hl-num" data-line="200"></td><td>                .<span class="hl-en">build</span>();</td></tr>
<tr><td class="hl-num" data-line="201"></td><td></td></tr>
<tr><td class="hl-num" data-line="202"></td><td>        <span class="hl-k">final</span> NotificationChannelCompat errorReportChannel = <span class="hl-k">new</span> NotificationChannelCompat</td></tr>
<tr><td class="hl-num" data-line="203"></td><td>                .<span class="hl-en">Builder</span>(<span class="hl-en">getString</span>(R.string.error_report_channel_id),</td></tr>
<tr><td class="hl-num" data-line="204"></td><td>                        NotificationManagerCompat.IMPORTANCE_LOW)</td></tr>
<tr><td class="hl-num" data-line="205"></td><td>                .<span class="hl-en">setName</span>(<span class="hl-en">getString</span>(R.string.error_report_channel_name))</td></tr>
<tr><td class="hl-num" data-line="206"></td><td>                .<span class="hl-en">setDescription</span>(<span class="hl-en">getString</span>(R.string.error_report_channel_description))</td></tr>
<tr><td class="hl-num" data-line="207"></td><td>                .<span class="hl-en">build</span>();</td></tr>
<tr><td class="hl-num" data-line="208"></td><td></td></tr>
<tr><td class="hl-num" data-line="209"></td><td>        <span class="hl-k">final</span> NotificationManagerCompat notificationManager = NotificationManagerCompat.<span class="hl-en">from</span>(<span class="hl-c">this</span>);</td></tr>
<tr><td class="hl-num" data-line="210"></td><td>        notificationManager.<span class="hl-en">createNotificationChannelsCompat</span>(Arrays.<span class="hl-en">asList</span>(mainChannel,</td></tr>
<tr><td class="hl-num" data-line="211"></td><td>                appUpdateChannel, hashChannel, errorReportChannel));</td></tr>
<tr><td class="hl-num" data-line="212"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="213"></td><td></td></tr>
<tr><td class="hl-num" data-line="214"></td><td>    <span class="hl-k">protected</span> <span class="hl-k">boolean</span> <span class="hl-en">isDisposedRxExceptionsReported</span>() {</td></tr>
<tr><td class="hl-num" data-line="215"></td><td>        <span class="hl-k">return</span> <span class="hl-c">false</span>;</td></tr>
<tr><td class="hl-num" data-line="216"></td><td>    }</td></tr>
<tr><td class="hl-num" data-line="217"></td><td></td></tr>
<tr><td class="hl-num" data-line="218"></td><td>}</td></tr>
<tr><td class="hl-num" data-line="219"></td><td></td></tr>
</tbody>
</table>